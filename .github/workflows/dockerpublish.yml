name: Docker build and push to Github Packages

on:
  push:
    branches:
      - master
      - staging

  pull_request:
    branches:
      - master
      - staging

env:
  IMAGE_NAME: openmappr

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

#
      - name: Scan for secrets (1/2) • Yelp/detect-secrets 
        uses: evanextreme/detect-secrets-action@1.0.0

      - name: Scan for secrets (2/2) • Trufflehog
        uses: edplato/trufflehog-actions-scan@v0.9i-beta
        with:
          # GitHub Token to access a private repository.
         githubToken: ${{ secrets.SCANS_TRUFFLEHOG_TOKEN }}# optional
          # Argument options for scan.
          scanArguments: # optional



#
      - name: Check docker build openmappr_web
        run: docker build . --file Dockerfile --tag openmapprimages/openmappr_web --build-arg script_file='run_docker_mode'

      - name: Check docker build openmappr_athena
        run: |
          cd ./athena
          docker build . --file Dockerfile --tag openmappr_athena --build-arg script_file='run_docker_mode'

      - name: Log into Dockerhub Container Registry
        run: docker login -u ${{ secrets.DOCKERHUB_EMAIL }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Publish to Dockerhub Container Registry
        run: docker push openmapprimages/openmappr_web:latest

#      - name: Push openmappr_athena image to Github Packages
#        run: |
#          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
#          VERSION=athena
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#
#          # Strip git ref prefix from version
#          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#
#          # Use Docker `latest` tag convention
#          # [ "$VERSION" == "master" ] && VERSION=latest
#
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#
#          docker tag openmappr_athena $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#      - name: Deploy to staging
#        run: |
#          cat ~/.ssh/id_rsa.pub
#          export REMOTE_SERVER=167.172.255.74
#          ssh root@$REMOTE_SERVER git clone git@github.com:selfhostedofficial/openmappr.git && cd openmappr && docker-compose -f docker-compose.do.yml up
